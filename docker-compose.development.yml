version: "3.7"

services:
  apm-server:
    #--user=apm-server
    command: --strict.perms=false --e
    depends_on:
      - elasticsearch
    environment:
      - apm-server.host="0.0.0.0:8200"
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    image: docker.elastic.co/apm/apm-server:7.6.0
    links:
      - elasticsearch:elasticsearch
    ports:
      - 0.0.0.0:8200:8200
    restart: always
    # volumes: 
    #   - ./temp/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml
  elasticsearch:
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    restart: always
    volumes: 
      - ./temp/elasticsearch:/usr/share/elasticsearch/data
  kibana:
    depends_on:
      - elasticsearch
    environment:
      - STATUS_ALLOWANONYMOUS=true
    image: docker.elastic.co/kibana/kibana:7.6.0
    links:
      - elasticsearch:elasticsearch
    ports:
      - 127.0.0.1:5601:5601
    restart: always
  minio:
    command: server /data
    environment: 
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    image: minio/minio
    ports:
      - 127.0.0.1:9000:9000
    restart: always
    volumes: 
      - ./temp/minio:/data
  mongo:
    image: mongo:latest
    ports:
      - 127.0.0.1:27017:27017
    restart: always
    volumes:
      - ./temp/mongo:/data/db
  mysql:
    environment:
      - MYSQL_ROOT_PASSWORD=testpassword
    image: mysql:5.6
    ports:
      - 127.0.0.1:3306:3306
    restart: always
    volumes:
      - ./temp/mysql:/var/lib/mysql
  node:
    build:
      context: .
      dockerfile: Dockerfile.development
    depends_on:
      - apm-server
      - elasticsearch
      - kibana
      - minio
      - mongo
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo-api_node:development
    links:
      - apm-server
      - elasticsearch:elasticsearch
      - minio:minio
      - mongo:mongo
      - mysql:mysql
      - redis:redis
    ports:
      - 127.0.0.1:3000:3000
      - 127.0.0.1:9229:9229
    restart: always
    volumes:
      - ./src:/app/src
  redis:
    image: redis:latest
    ports:
      - 127.0.0.1:6379:6379
    restart: always
