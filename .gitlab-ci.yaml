include:
  - template: Auto-DevOps.gitlab-ci.yml

stages:
  - build
  - test
  - deploy # dummy stage to follow the template guidelines
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup
  - notify
  - cache_push

variables:
  POSTGRES_ENABLED: "false"
  DOCKER_DRIVER: overlay2

  ROLLOUT_RESOURCE_TYPE: deployment

  DOCKER_TLS_CERTDIR: "" # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

build:
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME

sast:
  only:
    refs:
      - branches
      - merge_requests
      - tags
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $SAST_DISABLED
      - $SAST_DISABLE_DIND == 'true'

license_management:
  only:
    refs:
      - branches
      - merge_requests
      - tags
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $LICENSE_MANAGEMENT_DISABLED

.ds-analyzer:
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $DEPENDENCY_SCANNING_DISABLED
      - $DS_DISABLE_DIND == 'false'

dependency_scanning:
  only:
    refs:
      - branches
      - merge_requests
      - tags
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $DEPENDENCY_SCANNING_DISABLED
      - $DS_DISABLE_DIND == 'true'

container_scanning:
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CONTAINER_SCANNING_DISABLED

code_quality:
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CODE_QUALITY_DISABLED

test:
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $TEST_DISABLED

dast_environment_deploy:
  environment:
    url: https://dast-$CI_PROJECT_ID-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_DEFAULT_BRANCH != $CI_COMMIT_REF_NAME && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH
      - $DAST_DISABLED || $DAST_DISABLED_FOR_DEFAULT_BRANCH
      - $DAST_WEBSITE

stop_dast_environment:
  needs:
    - performance
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_DEFAULT_BRANCH != $CI_COMMIT_REF_NAME && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH
      - $DAST_DISABLED || $DAST_DISABLED_FOR_DEFAULT_BRANCH
      - $DAST_WEBSITE

dast:
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $DAST_DISABLED
      - $DAST_DISABLED_FOR_DEFAULT_BRANCH && $CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME

review:
  environment:
    url: https://$CI_PROJECT_ID-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

stop_review:
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

staging:
  environment:
    on_stop: stop_staging
    url: https://$CI_PROJECT_PATH_SLUG-staging.$KUBE_INGRESS_BASE_DOMAIN
  only:
    refs:
      - merge_requests
      - branches
    kubernetes: active
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

stop_staging:
  extends: .auto-deploy
  stage: cleanup
  script:
    - auto-deploy initialize_tiller
    - auto-deploy delete
  when: manual
  environment:
    name: staging
    action: stop
  only:
    refs:
      - branches
      - merge_requests
    kubernetes: active
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

production:
  only:
    refs:
      - merge_requests
    kubernetes: active
    variables:
      - $NONEE

production_manual:
  only:
    refs:
      - merge_requests
    kubernetes: active
    variables:
      - $NONEE

performance:
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      - $PERFORMANCE_DISABLED
  artifacts:
    paths:
      - sitespeed-results/
    reports:
      performance: performance.json

notify:success:
  stage: notify
  image:
    name: alpine/git
    entrypoint:
      - ""
  when: on_success
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  before_script:
    - apk add curl curl-dev jq
  cache:
    key: LATEST_SUCCESS_SHA_$CI_COMMIT_REF_NAME
    policy: pull
    paths:
      - lastest_success_sha/
  script:
    - export SITE_URL=$(cat environment_url.txt)
    - if [ -f lastest_success_sha/sha ]; then LAST_COMMIT_SHA=`cat lastest_success_sha/sha` ; fi
    - if [ ! -z $CUSTOM_LAST_COMMIT ]; then LAST_COMMIT_SHA=$CUSTOM_LAST_COMMIT ; fi
    - echo "*Build revision on branch $CI_COMMIT_REF_NAME =>* \`$CI_COMMIT_SHORT_SHA\`" > notif1
    - echo "*Image Num:* \`$CI_JOB_ID\`"
    - echo >> notif1
    - echo "✅👍" >> notif1
    - git fetch -a
    - echo "Changelog:" >> notif1
    - 'git log --format="++ [%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" ${LAST_COMMIT_SHA}..${CI_COMMIT_SHA} >> notif1'
    - |
      if [ $CI_COMMIT_REF_NAME == "develop" ]; then
          if [ -z $LAST_COMMIT_SHA ]; then
              git log --format="[%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" origin/master..${CI_COMMIT_SHA} >> notif1
          else
              git log --format="[%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" origin/master..${LAST_COMMIT_SHA} >> notif1
          fi
      fi
      if [ $CI_COMMIT_REF_NAME != "develop" -a $CI_COMMIT_REF_NAME != "master" ]; then
          if [ -z $LAST_COMMIT_SHA ]; then
              git log --format="[%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" origin/develop..${CI_COMMIT_SHA} >> notif1
          else
              git log --format="[%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" origin/develop..${LAST_COMMIT_SHA} >> notif1
          fi
      fi
    - echo >> notif1
    - echo "Visit site on $SITE_URL" >> notif1
    - sed ':a;N;$!ba;s/\n/\\n/g' notif1 >> rocket
    - NOTIF_MSG1=`cat notif1`
    - NOTIF_MSG2=`cat rocket`
    - cat rocket
    - curl -F chat_id="${CHAT_ID}" -F disable_web_page_preview="true" -F text="${NOTIF_MSG1}" "https://api.telegram.org/bot773942927:${NOTIF_BOT_TOKEN}/sendMessage?parse_mode=Markdown"
    - |
      curl -X POST -H 'Content-Type: application/json' --data "{\"username\":\"Gitlab\",\"icon_url\":\"https://about.gitlab.com/images/press/press-kit-icon.svg\",\"text\":\"Melobit.com Frontend Build Notification\",\"attachments\":[{\"title\":\"Build Info\",\"text\":\"${NOTIF_MSG2}\",\"color\":\"#0362bc\"}]}" https://chat.3re.ir/${ROCKET}

notify:failed:
  stage: notify
  image:
    name: alpine/git
    entrypoint:
      - ""
  when: on_failure
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  before_script:
    - apk add curl curl-dev jq
  cache:
    key: LATEST_SUCCESS_SHA_$CI_COMMIT_REF_NAME
    policy: pull
    paths:
      - lastest_success_sha/
  script:
    - if [ -f lastest_success_sha/sha ]; then LAST_COMMIT_SHA=`cat lastest_success_sha/sha` ; fi
    - if [ ! -z $CUSTOM_LAST_COMMIT ]; then LAST_COMMIT_SHA=$CUSTOM_LAST_COMMIT ; fi
    - echo "🔴👎" > notif1
    - echo "Build revision on branch $CI_COMMIT_REF_NAME \`$CI_COMMIT_SHORT_SHA\` failed" >> notif1
    - echo "Changelog:" >> notif1
    - 'git log --format="[%h](${CI_PROJECT_URL}/commit/%H):  \`%s\`" ${LAST_COMMIT_SHA}..${CI_COMMIT_SHA} >> notif1'
    - NOTIF_MSG1=`cat notif1`
    - sed ':a;N;$!ba;s/\n/\\n/g' notif1 >> rocket
    - NOTIF_MSG2=`cat rocket`
    - curl -F chat_id="${CHAT_ID}" -F disable_web_page_preview="true" -F text="${NOTIF_MSG1}" "https://api.telegram.org/bot773942927:${NOTIF_BOT_TOKEN}/sendMessage?parse_mode=Markdown"
    - |
      curl -X POST -H 'Content-Type: application/json' --data "{\"username\":\"Gitlab\",\"icon_url\":\"https://about.gitlab.com/images/press/press-kit-icon.svg\",\"text\":\"Melobit.com Frontend Build Notification\",\"attachments\":[{\"title\":\"Build Info\",\"text\":\"${NOTIF_MSG2}\",\"color\":\"#0362bc\"}]}" https://chat.3re.ir/${ROCKET}

cache_push:
  stage: cache_push
  image:
    name: byrnedo/alpine-curl
    entrypoint:
      - ""
  before_script:
    - ""
  when: on_success
  only:
    refs:
      - branches
      - tags
      - merge_requests
  except:
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  cache:
    key: LATEST_SUCCESS_SHA_$CI_COMMIT_REF_NAME
    policy: push
    paths:
      - lastest_success_sha/
  script:
    - mkdir lastest_success_sha
    - echo $CI_COMMIT_SHA > lastest_success_sha/sha
