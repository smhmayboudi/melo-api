version: "3.8"
services:
  apm-server:
    command: "--strict.perms=false -e"
    depends_on:
    - "elasticsearch"
    environment:
    - "apm-server.host='0.0.0.0:8200'"
    - "output.elasticsearch.hosts=['elasticsearch:9200']"
    image: "docker.elastic.co/apm/apm-server:7.7.1"
    links:
    - "elasticsearch:elasticsearch"
    # ports:
    # - "0.0.0.0:8200:8200"
    restart: "always"
    user: "apm-server"
    # volumes:
    # - "../data/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml"
  dgraph:
    image: "dgraph/dgraph:v20.03.3"
    ports:
    - "localhost:8080:8080"
    restart: "always"
    volumes:
    - "../data/dgraph:/usr/share/dgraph/data"
  elasticsearch:
    environment:
    - "discovery.type=single-node"
    image: "bitnami/elasticsearch:7.7.1"
    # ports:
    # - "localhost:9200:9200"
    # - "localhost:9300:9300"
    restart: "always"
    volumes:
    - "../data/elasticsearch:/usr/share/elasticsearch/data"
  kibana:
    depends_on:
    - "elasticsearch"
    environment:
    - "STATUS_ALLOWANONYMOUS=true"
    image: "bitnami/kibana:7.7.1"
    links:
    - "elasticsearch:elasticsearch"
    ports:
    - "localhost:5601:5601"
    restart: "always"
  minio:
    command: "server /data"
    environment:
    - "MINIO_ACCESS_KEY=minioadmin"
    - "MINIO_SECRET_KEY=minioadmin"
    image: "bitnami/minio:2020.6.12"
    # ports:
    # - "localhost:9000:9000"
    restart: "always"
    volumes:
    - "../data/minio:/data"
  mongo:
    image: "bitnami/mongodb:4.2.8"
    # ports:
    # - "localhost:27017:27017"
    restart: "always"
    volumes:
    - "../data/mongo:/data/db"
  mysql:
    environment:
    - "MYSQL_ROOT_PASSWORD=testpassword"
    image: "bitnami/mysql:5.7.25"
    # ports:
    # - "localhost:3306:3306"
    restart: "always"
    volumes:
    - "../data/mysql:/var/lib/mysql"
  redis:
    environment:
    - "ALLOW_EMPTY_PASSWORD=yes"
    image: "bitnami/redis:6.0.5"
    # ports:
    # - "localhost:6379:6379"
    restart: "always"
  action:
    build:
      context: "../"
      dockerfile: "apps/action/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_action:deployment"
    links:
    # - "apm-server:apm-server"
    - "redis:redis"
    restart: "always"
  album:
    build:
      context: "../"
      dockerfile: "apps/album/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_album:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  artist:
    build:
      context: "../"
      dockerfile: "apps/artist/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_artist:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  at:
    build:
      context: "../"
      dockerfile: "apps/at/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "mysql"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_at:deployment"
    links:
    # - "apm-server:apm-server"
    - "mysql:mysql"
    - "redis:redis"
    restart: "always"
  auth:
    build:
      context: "../"
      dockerfile: "apps/auth/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_auth:deployment"
    links:
    # - "apm-server:apm-server"
    - "redis:redis"
    restart: "always"
  const:
    build:
      context: "../"
      dockerfile: "apps/const/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_const:deployment"
    links:
    # - "apm-server:apm-server"
    - "redis:redis"
    restart: "always"
  download:
    build:
      context: "../"
      dockerfile: "apps/download/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_download:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  emotion:
    build:
      context: "../"
      dockerfile: "apps/emotion/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_emotion:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  file:
    build:
      context: "../"
      dockerfile: "apps/file/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - minio
    - "mysql"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_file:deployment"
    links:
    # - "apm-server:apm-server"
    - minio:minio
    - "mysql:mysql"
    - "redis:redis"
    restart: "always"
  jwks:
    build:
      context: "../"
      dockerfile: "apps/jwks/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "mysql"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_jwks:deployment"
    links:
    # - "apm-server:apm-server"
    - "mysql:mysql"
    - "redis:redis"
    restart: "always"
  melo-api:
    build:
      context: "../"
      dockerfile: "apps/melo-api/docker/Dockerfile"
    depends_on:
    - "action"
    - "album"
    # - "apm-server"
    - "artist"
    - "at"
    - "auth"
    - "const"
    - "download"
    - "emotion"
    - "file"
    - "jwks"
    - "playlist"
    - "redis"
    - "relation"
    - "rt"
    - "search"
    - "song"
    - "user"
    env_file:
    - "../.env.docker-compose"
    image: "melo_melo-api:deployment"
    links:
    # - "apm-server:apm-server"
    - "redis:redis"
    ports:
    - "localhost:3000:3000"
    - "localhost:9229:9229"
    restart: "always"
  playlist:
    build:
      context: "../"
      dockerfile: "apps/playlist/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "mongo"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_playlist:deployment"
    links:
    # - "apm-server:apm-server"
    - "mongo:mongo"
    - "redis:redis"
    restart: "always"
  relation:
    build:
      context: "../"
      dockerfile: "apps/relation/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - dgraph
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_relation:deployment"
    links:
    # - "apm-server:apm-server"
    - dgraph:dgraph
    - "redis:redis"
    restart: "always"
  rt:
    build:
      context: "../"
      dockerfile: "apps/rt/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "mysql"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_rt:deployment"
    links:
    # - "apm-server:apm-server"
    - "mysql:mysql"
    - "redis:redis"
    restart: "always"
  search:
    build:
      context: "../"
      dockerfile: "apps/search/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_search:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  song:
    build:
      context: "../"
      dockerfile: "apps/song/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "elasticsearch"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_song:deployment"
    links:
    # - "apm-server:apm-server"
    - "elasticsearch:elasticsearch"
    - "redis:redis"
    restart: "always"
  user:
    build:
      context: "../"
      dockerfile: "apps/user/docker/Dockerfile"
    depends_on:
    # - "apm-server"
    - "mysql"
    - "redis"
    env_file:
    - "../.env.docker-compose"
    image: "melo_user:deployment"
    links:
    # - "apm-server:apm-server"
    - "mysql:mysql"
    - "redis:redis"
    restart: "always"
