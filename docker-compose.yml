version: "3.8"
services:
  apm-server:
    command: --strict.perms=false -e
    depends_on:
      - elasticsearch
    environment:
      - apm-server.host="0.0.0.0:8200"
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    image: docker.elastic.co/apm/apm-server:7.7.1
    links:
      - elasticsearch:elasticsearch
    # ports:
    #   - 0.0.0.0:8200:8200
    restart: always
    user: apm-server
    # volumes: 
    #   - ./data/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml
  elasticsearch:
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    # ports:
    #   - 127.0.0.1:9200:9200
    #   - 127.0.0.1:9300:9300
    restart: always
    volumes: 
      - ./data/elasticsearch:/usr/share/elasticsearch/data
  kibana:
    depends_on:
      - elasticsearch
    environment:
      - STATUS_ALLOWANONYMOUS=true
    image: docker.elastic.co/kibana/kibana:7.7.1
    links:
      - elasticsearch:elasticsearch
    ports:
      - 127.0.0.1:5601:5601
    restart: always
  minio:
    command: server /data
    environment: 
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    image: minio/minio
    # ports:
    #   - 127.0.0.1:9000:9000
    restart: always
    volumes: 
      - ./data/minio:/data
  mongo:
    image: mongo:latest
    # ports:
    #   - 127.0.0.1:27017:27017
    restart: always
    volumes:
      - ./data/mongo:/data/db
  mysql:
    environment:
      - MYSQL_ROOT_PASSWORD=testpassword
    image: mysql:5.6
    # ports:
    #   - 127.0.0.1:3306:3306
    restart: always
    volumes:
      - ./data/mysql:/var/lib/mysql
  action:
    build:
      context: .
      dockerfile: docker/action.Dockerfile
    depends_on:
      # - apm-server
      - redis
    env_file:
      - .env.docker-compose
    image: melo/action:latest
    links:
      # - apm-server:apm-server
      - redis:redis
    restart: always
  album:
    build:
      context: .
      dockerfile: docker/album.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/album:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  artist:
    build:
      context: .
      dockerfile: docker/artist.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/artist:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  at:
    build:
      context: .
      dockerfile: docker/at.Dockerfile
    depends_on:
      # - apm-server
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo/at:latest
    links:
      # - apm-server:apm-server
      - mysql:mysql
      - redis:redis
    restart: always
  auth:
    build:
      context: .
      dockerfile: docker/auth.Dockerfile
    depends_on:
      # - apm-server
      - redis
    env_file:
      - .env.docker-compose
    image: melo/auth:latest
    links:
      # - apm-server:apm-server
      - redis:redis
    restart: always
  const:
    build:
      context: .
      dockerfile: docker/const.Dockerfile
    depends_on:
      # - apm-server
      - redis
    env_file:
      - .env.docker-compose
    image: melo/const:latest
    links:
      # - apm-server:apm-server
      - redis:redis
    restart: always
  download:
    build:
      context: .
      dockerfile: docker/download.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/download:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  emotion:
    build:
      context: .
      dockerfile: docker/emotion.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/emotion:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  file:
    build:
      context: .
      dockerfile: docker/file.Dockerfile
    depends_on:
      # - apm-server
      - minio
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo/file:latest
    links:
      # - apm-server:apm-server
      - minio:minio
      - mysql:mysql
      - redis:redis
    restart: always
  jwks:
    build:
      context: .
      dockerfile: docker/jwks.Dockerfile
    depends_on:
      # - apm-server
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo/jwks:latest
    links:
      # - apm-server:apm-server
      - mysql:mysql
      - redis:redis
    restart: always
  melo-api:
    build:
      context: .
      dockerfile: docker/melo-api.Dockerfile
    depends_on:
      - action
      - album
      # - apm-server
      - artist
      - at
      - auth
      - const
      - download
      - emotion
      - file
      - jwks
      - playlist
      - redis
      - relation
      - rt
      - search
      - song
      - user
    env_file:
      - .env.docker-compose
    image: melo/melo-api:latest
    links:
      # - apm-server:apm-server
      - redis:redis
    ports:
      - 127.0.0.1:3000:3000
      - 127.0.0.1:9229:9229
    restart: always
  playlist:
    build:
      context: .
      dockerfile: docker/playlist.Dockerfile
    depends_on:
      # - apm-server
      - mongo
      - redis
    env_file:
      - .env.docker-compose
    image: melo/playlist:latest
    links:
      # - apm-server:apm-server
      - mongo:mongo
      - redis:redis
    restart: always
  relation:
    build:
      context: .
      dockerfile: docker/relation.Dockerfile
    depends_on:
      # - apm-server
      - dgraph
      - redis
    env_file:
      - .env.docker-compose
    image: melo/relation:latest
    links:
      # - apm-server:apm-server
      - dgraph:dgraph
      - redis:redis
    restart: always
  rt:
    build:
      context: .
      dockerfile: docker/rt.Dockerfile
    depends_on:
      # - apm-server
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo/rt:latest
    links:
      # - apm-server:apm-server
      - mysql:mysql
      - redis:redis
    restart: always
  search:
    build:
      context: .
      dockerfile: docker/search.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/search:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  song:
    build:
      context: .
      dockerfile: docker/song.Dockerfile
    depends_on:
      # - apm-server
      - elasticsearch
      - redis
    env_file:
      - .env.docker-compose
    image: melo/song:latest
    links:
      # - apm-server:apm-server
      - elasticsearch:elasticsearch
      - redis:redis
    restart: always
  user:
    build:
      context: .
      dockerfile: docker/user.Dockerfile
    depends_on:
      # - apm-server
      - mysql
      - redis
    env_file:
      - .env.docker-compose
    image: melo/user:latest
    links:
      # - apm-server:apm-server
      - mysql:mysql
      - redis:redis
    restart: always
  redis:
    image: redis:latest
    # ports:
    #   - 127.0.0.1:6379:6379
    restart: always
