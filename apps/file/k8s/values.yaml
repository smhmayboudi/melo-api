redis:
  cluster:
    enabled: false
  fullnameOverride: melo-redis
  networkPolicy:
    enabled: false
  master:
    persistence:
      enabled: false
  metrics:
    enabled: false
  podDisruptionBudget:
    enabled: false
  tls:
    enabled: false
  securityContext:
    enabled: false
  sentinel:
    enabled: false
  slave:
    persistence:
      enabled: false
  sysctlImage:
    enabled: false
  volumePermissions:
    enabled: false
  usePassword: false

mysql:
  db:
    password: "testpassword"
    name: "meloapp"
  fullnameOverride: melo-mysql
  initdbScripts:
    my_init_script.sh: |
      #!/bin/sh
      cat << EOF | mysql -u root -ptestpassword -D meloapp -e \
      "CREATE TABLE FILES (
        id INT NOT NULL,
        owner_user_id INT NOT NULL,
        created_at DATETIME NOT NULL,
        size INT NOT NULL,
        e_tag VARCHAR(512) NOT NULL,
        file_key VARCHAR(512) NOT NULL,
        mime_type VARCHAR(512) NOT NULL,
        bucket VARCHAR(512) NOT NULL,
        PRIMARY KEY (id)
      );
      INSERT INTO FILES (
        id,
        owner_user_id,
        created_at,
        size,
        e_tag,
        file_key,
        mime_type,
        bucket
      ) VALUES (
        '1',
        '1',
        '2020-07-18 11:14:14',
        '1000',
        '33a64df551425fcc55e4d42a148795d9f25f89d4',
        'edaec87c-8f99-461d-b52a-3f6fcddba2da',
        'image/jpg',
        'misc'
      );
      INSERT INTO FILES (
        id,
        owner_user_id,
        created_at,
        size,
        e_tag,
        file_key,
        mime_type,
        bucket
      ) VALUES (
        '2',
        '1',
        '2020-07-18 11:15:14',
        '1002',
        '33a64df551425fcc55e4d42a148795d9f25f89d1',
        '77df136e-d252-4bd1-aa6e-6cb1e9d909a0',
        'image/jpg',
        'misc'
      );"
      EOF
  master:
    persistence:
      enabled: false
    replication:
      enabled: false
    securityContext:
      enabled: false
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  replication:
    enabled: false
  root:
    password: "testpassword"
  slave:
    persistence:
      enabled: false
    securityContext:
      enabled: false
    replicas: 1
  volumePermissions:
    enabled: false

minio:
  accessKey:
    password: minioadmin
  defaultBuckets: misc
  ingress:
    enabled: false
  mode: standalone
  networkPolicy:
    enabled: false
  persistence:
    enabled: false
  secretKey:
    password: minioadmin
  securityContext:
    enabled: false
  service:
    port: 9000
  statefulset:
    replicaCount: 1
  volumePermissions:
    enabled: false

replicaCount: 1

image:
  repository: melo_file
  pullPolicy: IfNotPresent
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #     - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - "/"
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  volumeMounts:
    mountPath: /app/.env
    subPath: .env
